import java.util.*;
public class MergeSorts{
    static int[] mergeSorts(int[] arr) {
        if (arr.length == 1)
            return arr;
        int mid = arr.length / 2;
        int[] left = mergeSorts(Arrays.copyOfRange(arr, 0, mid));
        int[] right = mergeSorts(Arrays.copyOfRange(arr, mid, arr.length));
        return merge(left, right);
    }

    static int[] merge(int[] first, int[] sec) {
     int i=0,j=0,k=0;
     int[] mix=new int[first.length+sec.length];

     while(i<first.length&&j<sec.length){

        if(first[i]<sec[j])
        {
            mix[k]=first[i];
            i++;
        }
        else
        {
            mix[k]=sec[j];
            j++;
        }
        k++;
     }
     while(i<first.length)
     {
        mix[k]=first[i];
        i++;
        k++;
     }
     while(j<sec.length)
     {
        mix[k]=sec[j];
        j++;
        k++;
     }
     return mix;
    }
    public static void main(String[] args) {
        int arr[]={9,3,5,7,8,1,0,2};
       int[] a=mergeSorts(arr);
        System.out.println(Arrays.toString(a));
    }
}
